import boto3
import json
from datetime import datetime, timedelta

dynamodb = boto3.resource('dynamodb')
table_name = 'authentication_table'
table = dynamodb.Table(table_name)

def is_token_expired(expiry_date):
    # Check if the current datetime is after the provided expiry date
    #current_time = datetime.utcnow()
    current_time = (datetime.utcnow() + timedelta(days=0)).isoformat()
    
    #return current_time > datetime.strptime(expiry_date, '%Y-%m-%dT%H:%M:%S.%fZ')
    return current_time > expiry_date

def lambda_handler(event, context):
    try:
        # Scan all items in the DynamoDB table
        response = table.scan()
        items = response.get('Items', [])
        
        for item in items:
            token_status = item.get('token_status')
            token_expiry = item.get('token_expiry')
            user_mobile = item.get('user_mobile')
            
            # Check if the token status is valid
            if token_status == 'valid':
                # Check if the token has expired
                if is_token_expired(token_expiry):
                    # Token has expired, update token_status to "expired"
                    table.update_item(
                        Key={'user_mobile': user_mobile},
                        UpdateExpression="set token_status = :expired",
                        ExpressionAttributeValues={':expired': 'expired'}
                    )
        
        return {
            'statusCode': 200,
            'body': json.dumps({'status': 'Token expiry check completed'}),
        }
    except Exception as e:
        # Handle any exceptions and return error
        return {
            'statusCode': 500,
            'body': json.dumps({'error': str(e)})
        }
